import pandas as pd
from datetime import datetime

# üìÇ √Ä personnaliser avec le bon chemin de fichier
fichier = "C:/Users/marguerin/OneDrive - Sopra Steria/Documents/GitHub/DRIAS-eau/debitRCP45formatpretraitement.txt"

# Chargement du fichier (en ignorant les lignes de commentaire commen√ßant par "#")
df = pd.read_csv(fichier, 
                 delim_whitespace=True, 
                 comment="#", 
                 header=None, 
                 names=["Date", "CodeHydro", "IdStation", "Debit"])

# Conversion de la date en format datetime
df["Date"] = pd.to_datetime(df["Date"], format="%Y%m%d")

# Ajout des colonnes utiles : ann√©e et saison
df["Annee"] = df["Date"].dt.year
df["Mois"] = df["Date"].dt.month

# Attribution des saisons
def get_saison(mois):
    if mois in [12, 1, 2]:
        return "Hiver"
    elif mois in [3, 4, 5]:
        return "Printemps"
    elif mois in [6, 7, 8]:
        return "√ât√©"
    elif mois in [9, 10, 11]:
        return "Automne"

df["Saison"] = df["Mois"].apply(get_saison)

# Attribution des p√©riodes
def get_periode(annee):
    if 2005 <= annee < 2030:
        return "2005-2030"
    elif 2030 <= annee < 2050:
        return "2030-2050"
    elif 2070 <= annee <= 2100:
        return "2070-2100"
    else:
        return None

df["Periode"] = df["Annee"].apply(get_periode)
df = df.dropna(subset=["Periode"])  # Enlever les lignes hors p√©riodes cibles

# Agr√©gation : moyenne du d√©bit par station, p√©riode et saison
resultat = df.groupby(["CodeHydro", "Periode", "Saison"])["Debit"].mean().reset_index()

# Reshape : 1 ligne par station et p√©riode, avec colonnes pour chaque saison
resultat_pivot = resultat.pivot_table(index=["CodeHydro", "Periode"], 
                                      columns="Saison", 
                                      values="Debit").reset_index()

# Export
resultat_pivot.to_csv("moyennes_debit_saisonnieres_par_station.csv", index=False)
print("‚úÖ Fichier export√© : moyennes_debit_saisonnieres_par_station.csv")
